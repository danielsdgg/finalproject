[{"/home/daniel/Development/code/mod2/end-of-phase2-project/src/index.js":"1","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/App.js":"2","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/About.js":"3","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Home.js":"4","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Contacts.js":"5","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Search.js":"6","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/AddAnimal.js":"7","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/UpdateAnimal.js":"8","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Comment.js":"9"},{"size":336,"mtime":1683198043319,"results":"10","hashOfConfig":"11"},{"size":633,"mtime":1683198457852,"results":"12","hashOfConfig":"11"},{"size":517,"mtime":1683155337289,"results":"13","hashOfConfig":"11"},{"size":5422,"mtime":1683198142646,"results":"14","hashOfConfig":"11"},{"size":1712,"mtime":1683198780171,"results":"15","hashOfConfig":"11"},{"size":484,"mtime":1683152546213,"results":"16","hashOfConfig":"11"},{"size":3445,"mtime":1683152546213,"results":"17","hashOfConfig":"11"},{"size":3617,"mtime":1683197926095,"results":"18","hashOfConfig":"11"},{"size":434,"mtime":1683152546213,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1gwtzhv",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/daniel/Development/code/mod2/end-of-phase2-project/src/index.js",[],[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/App.js",[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/About.js",[],[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Home.js",["50"],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Contacts.js",[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Search.js",[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/AddAnimal.js",[],[],"/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/UpdateAnimal.js",["51","52"],[],"import React, { useState } from \"react\";\nimport { useParams,useNavigate } from \"react-router-dom\";\n\nfunction UpdateAnimal({updateAnimal}){\n  //declare param functions\n  const params=useParams()\n  const {id}=useParams()\n  //declare navigation function\n  const navigate=useNavigate()\n\n  //declare our object variables\n\n    const [name, setName] = useState(\"\")\n    const [breed, setBreed] = useState(\"\")\n    const [age, setAge] = useState(\"\")\n    const [gender, setGender] = useState(\"\")\n    const [size, setSize] = useState(\"\")\n    const [weight, setWeight] = useState(\"\")\n    const [personality, setPersonality] = useState(\"\")\n    const [healthStatus, setHealthStatus] = useState(\"\")\n    const [availabilityStatus, setaAvailabilityStatus] = useState(\"\")\n    const [image, setImage] = useState(\"\")\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n        \n    //create object to hold data\n    const updateanimal = {\n      name:name,\n      breed:breed,\n      age:age,\n      gender:gender,\n      size:size,\n      weight:weight,\n      personality:personality,\n      healthStatus:healthStatus,\n      availabilityStatus:availabilityStatus,\n      image:image\n    }\n\n    fetch(`http://localhost:3000/animals/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updateanimal),\n    })\n      .then((response) => response.json())\n      .then((data) => updateanimal(data))\n\n      //clearing input fields\n      setInputClear()\n      //navigate to home page\n      navigate(\"/\");\n  }\n\n  function setInputClear() {\n    setName(\"\")\n    setBreed(\"\")\n    setAge(\"\")\n    setGender(\"\")\n    setSize(\"\")\n    setWeight(\"\")\n    setPersonality(\"\")\n    setHealthStatus(\"\")\n    setaAvailabilityStatus(\"\")\n    setImage(\"\")\n  }\n\n  return (\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <h1 style={{textAlign:\"center\"}}>UPDATE ANIMAL</h1>\n        <label for=\"name\">Name</label>\n          <input type=\"text\" className=\"form-name\" id=\"name\" value={name} placeholder=\"Enter Animal Name\" onChange={e => setName(e.target.value)}/>\n\n          <label for=\"breed\">Breed</label>\n          <input type=\"text\" id=\"breed\" value={breed} placeholder=\"Enter Breed\" onChange={e => setBreed(e.target.value)}/>\n\n          <label for=\"age\">Age</label>\n          <input type=\"text\" id=\"age\" value={age} placeholder=\"Enter Age\" onChange={e => setAge(e.target.value)}/>\n\n          <label for=\"gender\">Gender</label>\n          <input type=\"text\" id=\"gender\" value={gender} placeholder=\"Enter Gender\" onChange={e => setGender(e.target.value)}/>\n\n          <label for=\"size\">Size</label>\n          <input type=\"text\" id=\"size\" value={size} placeholder=\"Enter size\" onChange={e => setSize(e.target.value)}/>\n\n          <label for=\"weight\">Weight</label>\n          <input type=\"text\" id=\"weight\" value={weight} placeholder=\"Enter Weight\" onChange={e => setWeight(e.target.value)}/>\n\n          <label for=\"personality\">Personality</label>\n          <input type=\"text\" id=\"personality\" value={personality} placeholder=\"Enter Personality\" onChange={e => setPersonality(e.target.value)}/>\n\n          <label for=\"healthStatus\">Health Status</label>\n          <input type=\"text\" id=\"healthstatus\" value={healthStatus} placeholder=\"Enter Breed\" onChange={e => setHealthStatus(e.target.value)}/>\n\n          <label for=\"image\">Image Url</label>\n          <input type={<img/>} id=\"image\" value={image} placeholder=\"Enter Image URL\" onChange={e => setImage(e.target.value)}/>\n\n       <button className=\"submit\" type=\"submit\">ENTER</button>\n      </form>\n  );\n\n}\nexport default UpdateAnimal;\n","/home/daniel/Development/code/mod2/end-of-phase2-project/src/components/Comment.js",[],[],{"ruleId":"53","severity":1,"message":"54","line":126,"column":12,"nodeType":"55","messageId":"56","endLine":126,"endColumn":29},{"ruleId":"53","severity":1,"message":"57","line":6,"column":9,"nodeType":"55","messageId":"56","endLine":6,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":99,"column":24,"nodeType":"60","endLine":99,"endColumn":30},"no-unused-vars","'handleShowDetails' is defined but never used.","Identifier","unusedVar","'params' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]